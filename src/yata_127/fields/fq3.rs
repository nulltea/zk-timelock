use ark_ff::{
    fields::fp3::{Fp3, Fp3Config},
    Field, MontFp,
};

use crate::yata_127::Fq;

pub type Fq3 = Fp3<Fq3Config>;

pub struct Fq3Config;

impl Fp3Config for Fq3Config {
    type Fp = Fq;

    /// NONRESIDUE = 11
    /// It means that (x^3 - 5) is irreducible in F_{q^3}
    /// We also need "u" to be a nonresidue so it can be the twist
    const NONRESIDUE: Fq = MontFp!("5");

    /// t = (q^3 - 1) / pow(2, 4)
    const TWO_ADICITY: u32 = 4;

    #[rustfmt::skip]
    /// t_minus_one_div_2
    const TRACE_MINUS_ONE_DIV_TWO: &'static [u64] = &[
        0xd553222db696eed8,
        0x1a6f9ca5812c9ea3,
        0x156e43b71903401b,
        0x419116246b33c8e7,
        0xb6fe229638da9f40,
        0x9712d80009779be0,
        0xa787b67d0c793bba,
        0x0f379cc0f5e5a0e0,
        0x12635474ec6d2b0a,
        0xc4787f2080a98464,
        0x0561d8a482ba6f6d,
        0xeff3a2adafc7597c,
        0x0af54399f2213cf0,
        0xe85c98ff6cbbba90,
        0x2d4134104f034524,
        0x6e591a662072edb1,
        0xc96b7b8954d44213,
        0x1e7c884fa8e3ebd6,
        0x3a6eba8688efb02e,
        0x5ea122db756ea6e1,
        0x58ec0cd18038e78b,
        0x055100016f5b9e75,
        0x616d110a38db69db,
        0xe2d08b35d1072043,
        0xc1c5b8c532d6f0b1,
        0xfecd60f7669c4a29,
        0x3e49c2bc9362ddda,
        0x9292a49124ee338c,
        0x44dbb38d6ab13d23,
        0x1290837199807d1a,
        0x6fc843f4c14379ab,
        0x0562b6e999f64f40,
        0xb408d898712116a9,
        0xd10b283abdb7093d,
        0xdec8183fe345e20e,
        0x851268389b991fbf,
        0x880e6f6f57531341,
        0x4e84f57065b96447,
        0x9371d4f6bd
    ];

    /// a quadratic nonresidue u
    /// u^T
    const QUADRATIC_NONRESIDUE_TO_T: Fq3 = Fq3::new(
        MontFp!("48748923930101989821174716110429133049421803076565669803121595617213946350705366541229397933415464702213794982169532151539638467419251481499896327380776367198339245640194519641332872668706920934248025562022318136831195656394186869288232798501470208"),
        Fq::ZERO,
        Fq::ZERO,
    );

    /// NQR = 5
    /// NQR ^ ((q^0 - 1) / 3) = 1
    /// NQR ^ ((q^1 - 1) / 3) = 158164773293246164928191506423795290822624508614190410039868378750451873499283549514527042158960408291274284177439282991509289235894292806426569003744349478225475741835562269113192653563191786511122803551764533743021881218951197705356291692313302855
    /// NQR ^ ((q^2 - 1) / 3) = 137338827194363044839285770158792901283213494759283568492054045581545398727843036346211593152999493875350346490900060945614815024248544413697720167654237356797680157624957367903361491664978506560521418647025282110211356891005891684994807961779622761
    const FROBENIUS_COEFF_FP3_C1: &'static [Fq] = &[
        Fq::ONE,
        MontFp!("158164773293246164928191506423795290822624508614190410039868378750451873499283549514527042158960408291274284177439282991509289235894292806426569003744349478225475741835562269113192653563191786511122803551764533743021881218951197705356291692313302855"),
        MontFp!("137338827194363044839285770158792901283213494759283568492054045581545398727843036346211593152999493875350346490900060945614815024248544413697720167654237356797680157624957367903361491664978506560521418647025282110211356891005891684994807961779622761"),
    ];

    /// NQR = 5
    /// NQR ^ (2 * (q^0 - 1) / 3) = 1
    /// NQR ^ (2 * (q^1 - 1) / 3) = 158164773293246164928191506423795290822624508614190410039868378750451873499283549514527042158960408291274284177439282991509289235894292806426569003744349478225475741835562269113192653563191786511122803551764533743021881218951197705356291692313302855
    /// NQR ^ (2 * (q^2 - 1) / 3) = 137338827194363044839285770158792901283213494759283568492054045581545398727843036346211593152999493875350346490900060945614815024248544413697720167654237356797680157624957367903361491664978506560521418647025282110211356891005891684994807961779622761
    const FROBENIUS_COEFF_FP3_C2: &'static [Fq] = &[
        Fq::ONE,
        Self::FROBENIUS_COEFF_FP3_C1[2],
        Self::FROBENIUS_COEFF_FP3_C1[1],
    ];
}
