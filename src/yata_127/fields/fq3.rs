use ark_ff::{
    fields::fp3::{Fp3, Fp3Config},
    Field, MontFp,
};

use crate::yata_127::Fq;

pub type Fq3 = Fp3<Fq3Config>;

pub struct Fq3Config;

impl Fp3Config for Fq3Config {
    type Fp = Fq;

    /// NONRESIDUE = 11
    /// It means that (x^3 - 5) is irreducible in F_{q^3}
    /// We also need "u" to be a nonresidue so it can be the twist
    const NONRESIDUE: Fq = MontFp!("5");

    /// t = (q^3 - 1) / pow(2, 3)
    const TWO_ADICITY: u32 = 3;

    #[rustfmt::skip]
    /// t_minus_one_div_2
    const TRACE_MINUS_ONE_DIV_TWO: &'static [u64] = &[
        0xaaa6445b6d2dddb0,
        0x34df394b02593d47,
        0x2adc876e32068036,
        0x83222c48d66791ce,
        0x6dfc452c71b53e80,
        0x2e25b00012ef37c1,
        0x4f0f6cfa18f27775,
        0x1e6f3981ebcb41c1,
        0x24c6a8e9d8da5614,
        0x88f0fe41015308c8,
        0x0ac3b1490574dedb,
        0xdfe7455b5f8eb2f8,
        0x15ea8733e44279e1,
        0xd0b931fed9777520,
        0x5a8268209e068a49,
        0xdcb234cc40e5db62,
        0x92d6f712a9a88426,
        0x3cf9109f51c7d7ad,
        0x74dd750d11df605c,
        0xbd4245b6eadd4dc2,
        0xb1d819a30071cf16,
        0x0aa20002deb73cea,
        0xc2da221471b6d3b6,
        0xc5a1166ba20e4086,
        0x838b718a65ade163,
        0xfd9ac1eecd389453,
        0x7c93857926c5bbb5,
        0x2525492249dc6718,
        0x89b7671ad5627a47,
        0x252106e33300fa34,
        0xdf9087e98286f356,
        0x0ac56dd333ec9e80,
        0x6811b130e2422d52,
        0xa21650757b6e127b,
        0xbd90307fc68bc41d,
        0x0a24d07137323f7f,
        0x101cdedeaea62683,
        0x9d09eae0cb72c88f,
        0x126e3a9ed7a
    ];

    /// a quadratic nonresidue u
    /// u^T
    const QUADRATIC_NONRESIDUE_TO_T: Fq3 = Fq3::new(
        MontFp!("31334568688129675667391779742052274510420205806735185784442389558377963930051094894950807563085134789270329113622526565786883965538621397755114952991725716326703959304218194989086869980507473982493341252328813423334297534020361933484596397911048192"),
        Fq::ZERO,
        Fq::ZERO,
    );

    /// NQR = 5
    /// NQR ^ ((q^0 - 1) / 3) = 1
    /// NQR ^ ((q^1 - 1) / 3) = 158164773293246164928191506423795290822624508614190410039868378750451873499283549514527042158960408291274284177439282991509289235894292806426569003744349478225475741835562269113192653563191786511122803551764533743021881218951197705356291692313302855
    /// NQR ^ ((q^2 - 1) / 3) = 137338827194363044839285770158792901283213494759283568492054045581545398727843036346211593152999493875350346490900060945614815024248544413697720167654237356797680157624957367903361491664978506560521418647025282110211356891005891684994807961779622761
    const FROBENIUS_COEFF_FP3_C1: &'static [Fq] = &[
        Fq::ONE,
        MontFp!("158164773293246164928191506423795290822624508614190410039868378750451873499283549514527042158960408291274284177439282991509289235894292806426569003744349478225475741835562269113192653563191786511122803551764533743021881218951197705356291692313302855"),
        MontFp!("137338827194363044839285770158792901283213494759283568492054045581545398727843036346211593152999493875350346490900060945614815024248544413697720167654237356797680157624957367903361491664978506560521418647025282110211356891005891684994807961779622761"),
    ];

    /// NQR = 5
    /// NQR ^ (2 * (q^0 - 1) / 3) = 1
    /// NQR ^ (2 * (q^1 - 1) / 3) = 158164773293246164928191506423795290822624508614190410039868378750451873499283549514527042158960408291274284177439282991509289235894292806426569003744349478225475741835562269113192653563191786511122803551764533743021881218951197705356291692313302855
    /// NQR ^ (2 * (q^2 - 1) / 3) = 137338827194363044839285770158792901283213494759283568492054045581545398727843036346211593152999493875350346490900060945614815024248544413697720167654237356797680157624957367903361491664978506560521418647025282110211356891005891684994807961779622761
    const FROBENIUS_COEFF_FP3_C2: &'static [Fq] = &[
        Fq::ONE,
        Self::FROBENIUS_COEFF_FP3_C1[2],
        Self::FROBENIUS_COEFF_FP3_C1[1],
    ];
}
