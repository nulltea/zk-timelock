use ark_ff::{
    fields::fp3::{Fp3, Fp3Config},
    Field, MontFp,
};

use crate::yt6_776::Fq;

pub type Fq3 = Fp3<Fq3Config>;

pub struct Fq3Config;

impl Fp3Config for Fq3Config {
    type Fp = Fq;

    /// NONRESIDUE = 2
    /// It means that (x^3 - 2) is irreducible in F_{q^3}
    /// We also need "u" to be a nonresidue so it can be the twist
    const NONRESIDUE: Fq = MontFp!("2");

    /// t = (q^3 - 1) / pow(2, 1)
    const TWO_ADICITY: u32 = 1;

    #[rustfmt::skip]
    /// t_minus_one_div_2
    const TRACE_MINUS_ONE_DIV_TWO: &'static [u64] = &[
        0x4b9107145c0adb56,
        0xbfd631fd08c7381d,
        0x6f9a38ff8876a8e6,
        0x97118348413f3a1a,
        0xff7b030d885e3421,
        0x85a0aec5dcffceab,
        0x7a4cf9f61d35b47a,
        0x9639f0a8d57368d4,
        0x2bfb361aed36d6c0,
        0x5b96a842dc59e71e,
        0xa5355e676ce44f99,
        0xb4dbcb2a1aecd5d3,
        0x4c9a7e634710ef25,
        0xdc93cb5faacd7141,
        0x050715e18eb3a4cd,
        0xb75bf2a4a136a298,
        0xb734e644dfb0b22b,
        0x6219db7b7784697f,
        0xcb8079c68fade162,
        0xf9570d73b7212667,
        0x0704f3a06001c87f,
        0x5437911c23df35de,
        0x5f86ee5c0c072adf,
        0x2829526f230ed76e,
        0x7e96d82e6a1b5d58,
        0x7a5f3fa8d26d2555,
        0xc007ed25b9244092,
        0x9204f5edf1897e76,
        0x8f50d93bd1245e6c,
        0x8ac2570174804fc4,
        0xf5b00063bd49c91d,
        0x4640f8d38faad24a,
        0xdb19c4dc44929a4b,
        0x946d373fe6f2dc2b,
        0x4ca95762eb86cc4f,
        0xac6da288c2a7a874,
        0x1c52d1
    ];

    /// a quadratic nonresidue u
    /// u^T
    const QUADRATIC_NONRESIDUE_TO_T: Fq3 = Fq3::new(
        MontFp!("302876569457825524966963978832434590406053779156603009624470901835395191291637690891553592487879420793954488870041093531751263054715908884521658734786033067299584382405655097608680895035965608802429825491308358593497932819026331828224"),
        Fq::ZERO,
        Fq::ZERO,
    );

    /// NQR = 5
    /// NQR ^ ((q^0 - 1) / 3) = 1
    /// NQR ^ ((q^1 - 1) / 3) = 142530150333094371869703769686731425964913314771299981144308427540645932934092011898942172819751386393848850418097664734615766850620581003523120817544498576459207635586430646422648400528506404609884695553029564408157616901335302173985
    /// NQR ^ ((q^2 - 1) / 3) = 160346419124731168354354950401762388232771363404217916502074571949364243759857652128488749182853891605869079242021400757430774352434516395222551724622105600641910619996330766274708685150723349823386207315893156041672692769501110498977
    const FROBENIUS_COEFF_FP3_C1: &'static [Fq] = &[
        Fq::ONE,
        MontFp!("142530150333094371869703769686731425964913314771299981144308427540645932934092011898942172819751386393848850418097664734615766850620581003523120817544498576459207635586430646422648400528506404609884695553029564408157616901335302173985"),
        MontFp!("160346419124731168354354950401762388232771363404217916502074571949364243759857652128488749182853891605869079242021400757430774352434516395222551724622105600641910619996330766274708685150723349823386207315893156041672692769501110498977"),
    ];

    /// NQR = 5
    /// NQR ^ (2 * (q^0 - 1) / 3) = 1
    /// NQR ^ (2 * (q^1 - 1) / 3) = 160346419124731168354354950401762388232771363404217916502074571949364243759857652128488749182853891605869079242021400757430774352434516395222551724622105600641910619996330766274708685150723349823386207315893156041672692769501110498977
    /// NQR ^ (2 * (q^2 - 1) / 3) = 142530150333094371869703769686731425964913314771299981144308427540645932934092011898942172819751386393848850418097664734615766850620581003523120817544498576459207635586430646422648400528506404609884695553029564408157616901335302173985
    const FROBENIUS_COEFF_FP3_C2: &'static [Fq] = &[
        Fq::ONE,
        Self::FROBENIUS_COEFF_FP3_C1[2],
        Self::FROBENIUS_COEFF_FP3_C1[1],
    ];
}
